                           idigi_device_request sample application

Overview

This sample demonstrates how to use the idigi connector API's to remotely control a device, 
the iDigi connector API's are located in the file /usr/include/idigi_connector.h on the device.

The iDigi library is located in /usr/lib/libidigi.so and contains the API defined in idigi_connector.h.
The library will connect and stay connected to the iDigi cloud as long as the process which starts
the iDigi connector is alive.

Code Flow

The routine main() calls application_start() which initializes the iDigi Connector by calling
idigi_connector_start(), this will initiate the connection process to the iDigi cloud, if any errors are
encountered they are reported to stdout and will show up in the workbench console window.

Note: If a certificate error is reported, verify that the data and time is set correctly on
the device, use the date command as show below (plug in the correct date/time) to set the time.

date +%Y%m%d -s "20120601"

Next, application_start() then calls idigi_register_device_request_callbacks(), the callback
device_request_callback() is called whenever a request is received from the iDigi cloud.

The callback device_response_callback() is called after a request is made and indicates the
response to be sent back to the server.

The command from the iDigi server is contained in the target parameter to device_request_callback().
This sample uses the command_table to contain a list of commands and there corresponding handler
functions, in this sample we support two commands, LED_ON and LED_OFF.  The routines led_on and
led_off are called by the device_request_callback() when the corresponding command is received from the iDigi
server.

Building
     1. Click on Wind River Workbench icon, this is used to build, debug and launch the idigi sample
        applications.
     2. The sample applications appear on the left hand side of the workbench.
     3. Click on idigi_connect
     4. Right mouse click and select Build Project.

In the Build Console on the lower portion of the screen you can view the build output.

Running

In order to run the sample we use the UserMode connection in the lower left hand corner under Remote Systems.
    1. Click on and highlight UserModeConnection in the lower left hand corner.
    2. Right mouse click on Connect, the bottom toolbar will now say Connected - Target server running
    3. Right mouse click on Download -> Linux Application Process then click OK
    4. Right mouse click again on UserModeConnection and select Run->Linux Application Process then click OK

At this point the device will be running, the output will appear in the console window.

Send a Request to the device

Two python scripts are provided which use the web services interface to control the device over the
iDigi cloud, the python scripts are called led_on.py and led_off.py, the take the device is, username
and password as arguments.  To run the python scripts type:

python led_on.py <username> <password> <device_id>

example:
python led_off.py username password 00000000-00000000-00b338ff-ff0002d8
 
You will then see the status LED's on the Kontron device turn on, the status LED is on the top of the 
device closest to the side with the Ethernet cable.  You can also use iDigi Manager Pro to view the
device and send SCI commands from the web services console.



